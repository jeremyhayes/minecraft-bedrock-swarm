version: '3.8'

services:

  bedrock:
    image: itzg/minecraft-bedrock-server:latest@sha256:2e531123e3049a01bccd932dd8b96e8b509f1ab6daad67ef7d217e278a7f7c75
    ports:
      - target: 19132
        published: 19132
        protocol: udp
        mode: host
    networks:
      - host
    volumes:
      - server-data:/data
    environment:
      # docker image properties
      - EULA=TRUE          # accept the microsoft eula
      - VERSION=LATEST     # LATEST|PREVIOUS|major.minor|major.minor.patch.release
      # Minecraft server.properties parameters
      # https://minecraft.fandom.com/wiki/Server.properties#Bedrock_Edition_3
      - "SERVER_NAME=Family Server"
      - "LEVEL_NAME=Mushroom Kingdom"
      - GAMEMODE=survival
      - DIFFICULTY=easy
      - ONLINE_MODE=false
      #- ALLOW_CHEATS=false
      #- ALLOW_LIST=xxx
      #- DEFAULT_PLAYER_PERMISSION_LEVEL=member
      #- LEVEL_SEED=xxx
      #- LEVEL_TYPE=Default
      #- MAX_PLAYERS=10
      #- MAX_THREADS=8
      #- PLAYER_IDLE_TIMEOUT=30
      #- PLAYER_MOVEMENT_SCORE_THRESHOLD=20
      #- PLAYER_MOVEMENT_DISTANCE_THRESHOLD=0.3
      #- PLAYER_MOVEMENT_DURATION_THRESHOLD_IN_MS=500
      #- SERVER_AUTHORITATIVE_MOVEMENT=server-auth
      #- SERVER_PORT=19132
      #- SERVER_PORT_V6=19133
      #- TEXTUREPACK_REQUIRED=false
      #- TICK_DISTANCE=4
      #- VIEW_DISTANCE=32
      #- CORRECT_PLAYER_MOVEMENT=false
    deploy:
      placement:
        constraints:
          - node.labels.arch == x86_64

  backup:
    image: alpinelinux/docker-cli
    entrypoint: "sh -c"
    command:
      - "./backup.sh"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - server-data:/opt/server
      - backups-data:/opt/backups
      - "./backup.sh:./backup.sh"
    environment:
      - SERVER_DIR=/opt/server
      - BACKUP_DIR=/opt/backups
      - SERVICE_NAME=mc_bedrock
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: none
      replicas: 0 # none by default; created when cron hits
      labels:
        # backup and restart daily at 6am
        - swarm.cronjob.enable=true
        - swarm.cronjob.schedule=0 6 * * *

  update:
    image: alpinelinux/docker-cli
    entrypoint: "sh -c"
    command:
      # force service update, which causes restart
      # assumes this is deployed to a stack named "mc"
      - "docker service update mc_bedrock --force"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: none
      replicas: 0 # none by default; created when cron hits
      labels:
        # restart daily at 6am to get latest MC version
        - swarm.cronjob.enable=false
        - swarm.cronjob.schedule=0 6 * * *

  cron:
    image: crazymax/swarm-cronjob:1.11.0
    environment:
      - TZ=America/New_York
      - LOG_LEVEL=info
      - LOG_JSON=false
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: 0 # disabled; already running in lab stack

networks:
  host:
    external: true

volumes:
  server-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/opt/apps/minecraft/server'
  backups-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/opt/apps/minecraft/backups'
